service:
  name: nest

org: fitlink
app: fitlink

plugins:
  # - serverless-layers
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-deployment-bucket
  - serverless-provisioned-concurrency-autoscaling

package:
  exclude:
    - ./**
  include:
    - dist/apps/api/serverless.js
    - serverless/package.json
    - serverless/yarn.lock

custom:
  # serverless-layers:
  #   functions:
  #     - main
  #     - migrate
  #     - leagues
  #   dependenciesPath: ./serverless/package.json
  #   packageManager: yarn
  #   customInstallationCommand: node -e "fs.copyFileSync('../../../serverless/.yarnclean', '.yarnclean'); fs.copyFileSync('../../../serverless/yarn.lock', 'yarn.lock')" && yarn install --production --frozen-lockfile
  customDomain:
    domainName: ${env:API_DOMAIN_NAME}
    hostedZoneId: ${env:API_DOMAIN_NAME_HOSTED_ZONE_ID}
    endpointType: regional
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-2
  deploymentBucket:
    name: ${env:SERVERLESS_DEPLOYMENT_BUCKET}
    serverSideEncryption: AES256
  ecr:
    images:
      appimage:
        uri: 036044316251.dkr.ecr.eu-west-2.amazonaws.com/fitlink-nest@sha256:31c5f9ae1797b7bbbbbee47420fa2110a0ac26e75d8430eb9e5d66dfda0b8f6f

functions:
  router:
    image:
      name: appimage
      command:
        - serverless.handler
    events:
      - http:
          method: any
          path: /{any+}
          cors: true
    vpc:
      securityGroupIds:
        - ${env:VPC_SECURITY_GROUP_ID}
      subnetIds:
        - ${env:VPC_SUBNET_ID_1}
        - ${env:VPC_SUBNET_ID_2}
        - ${env:VPC_SUBNET_ID_3}
    provisionedConcurrency: ${env:PROVISIONED_CONCURRENCY}
    concurrencyAutoscaling: false

  migrator:
    image:
      name: appimage
      command:
        - serverless.migrate
    vpc:
      securityGroupIds:
        - ${env:VPC_SECURITY_GROUP_ID}
      subnetIds:
        - ${env:VPC_SUBNET_ID_1}
        - ${env:VPC_SUBNET_ID_2}
        - ${env:VPC_SUBNET_ID_3}
  jobs:
    image:
      name: appimage
      command:
        - serverless.processLeagues
    vpc:
      securityGroupIds:
        - ${env:VPC_SECURITY_GROUP_ID}
      subnetIds:
        - ${env:VPC_SUBNET_ID_1}
        - ${env:VPC_SUBNET_ID_2}
        - ${env:VPC_SUBNET_ID_3}
    events:
      - schedule: rate(10 minutes)
