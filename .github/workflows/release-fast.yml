name: Release to UAT (no tests)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
      DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
      DB_DATABASE_NAME: ${{ secrets.DEV_DB_DATABASE_NAME }}
      DB_HOST: ${{ secrets.DEV_DB_HOST }}
      DB_PORT: ${{ secrets.DEV_DB_PORT }}
      API_PREFIX: ${{ secrets.DEV_API_PREFIX }}
      API_DOMAIN_NAME: ${{ secrets.DEV_API_DOMAIN_NAME }}
      API_DOMAIN_NAME_HOSTED_ZONE_ID: ${{ secrets.DEV_API_DOMAIN_NAME_HOSTED_ZONE_ID }}

      # This is the AWS API Gateway hosted proxy for imin, allowing the lambda function to reach it inside the VPC
      # https://eu-west-2.console.aws.amazon.com/apigateway/home?region=eu-west-2#/apis/a1udqh1r23/settings
      IMIN_API_BASE_URL: https://a1udqh1r23.execute-api.eu-west-2.amazonaws.com/imin-proxy/
      EMAIL_DEBUG: 0
      ENABLE_SWAGGER: 1

      # S3 configuration uses a VPC endpoint (interface)
      S3_BUCKET: develop-nest-fitlinkapp
      S3_ENDPOINT: develop-nest-fitlinkapp.vpce-00806631016162256-9moxfok7.s3.eu-west-2.vpce.amazonaws.com
      S3_USE_ACCESS_POINT: '1'
      S3_REGION: eu-west-2
      S3_PUBLIC_ENDPOINT: https://develop-nest-fitlinkapp.s3.eu-west-2.amazonaws.com

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build nest for Serverless
        run: yarn run build

      - name: Install serverless globally
        run: yarn add global serverless@2.28.7

      - name: Serverless - Run deploy
        if: github.ref == 'refs/heads/develop'
        run: yarn run sls:deploy

      - name: Serverless - Run migrations
        if: github.ref == 'refs/heads/develop'
        run: yarn run sls:migrate
