name: Release to UAT (no tests)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      # Serverless
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      SERVERLESS_DEPLOYMENT_BUCKET: ${{ secrets.DEV_SERVERLESS_DEPLOYMENT_BUCKET }}

      # Database
      DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
      DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
      DB_DATABASE_NAME: ${{ secrets.DEV_DB_DATABASE_NAME }}
      DB_HOST: ${{ secrets.DEV_DB_HOST }}
      DB_PORT: ${{ secrets.DEV_DB_PORT }}

      # JWTs
      AUTH_JWT_SECRET: ${{ secrets.DEV_AUTH_JWT_SECRET }}
      EMAIL_JWT_TOKEN_SECRET: ${{ secrets.DEV_EMAIL_JWT_TOKEN_SECRET }}

      # Strava
      STRAVA_CLIENT_ID: ${{ secrets.DEV_STRAVA_CLIENT_ID }}
      STRAVA_CLIENT_SECRET: ${{ secrets.DEV_STRAVA_CLIENT_SECRET }}

      # Fitbit
      FITBIT_CLIENT_ID: ${{ secrets.DEV_FITBIT_CLIENT_ID }}
      FITBIT_CLIENT_SECRET: ${{ secrets.DEV_FITBIT_CLIENT_SECRET }}

      # Google and Apple
      GOOGLE_CLIENT_ID: ${{ secrets.PROD_GOOGLE_CLIENT_ID }}
      APPLE_CLIENT_ID: ${{ secrets.PROD_APPLE_CLIENT_ID }}
      APPLE_PRIVATE_KEY_B64: ${{ secrets.PROD_APPLE_PRIVATE_KEY_B64 }}

      # Imin events service
      IMIN_API_KEY: ${{ secrets.PROD_IMIN_API_KEY }}

      # S3 & SES
      S3_ACCESS_KEY_ID: ${{ secrets.DEV_S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.DEV_S3_SECRET_ACCESS_KEY }}
      SES_ACCESS_KEY_ID: ${{ secrets.DEV_SES_ACCESS_KEY_ID }}
      SES_SECRET_ACCESS_KEY: ${{ secrets.DEV_SES_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Copy environment
        run: cp .env.staging .env

      - name: Build nest for Serverless
        run: yarn run build

      - name: Install serverless globally
        run: yarn add global serverless@2.28.7 -W

      - name: Serverless - Run deploy
        if: github.ref == 'refs/heads/develop'
        run: yarn run sls:deploy

      - name: Serverless - Run migrations
        if: github.ref == 'refs/heads/develop'
        run: yarn run sls:migrate
