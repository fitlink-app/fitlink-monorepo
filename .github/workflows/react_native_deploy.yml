name: React Native Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
      - 'feature/*'

jobs:
  deploy-ios:
    runs-on: macos-latest
    if: github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: apps/mobile/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('apps/mobile/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install dependencies
      run: yarn install
      working-directory: apps/mobile

    - name: Update AppCenter-Config.plist with AppSecret
      run: plutil -replace AppSecret -string "${{ secrets.APP_CENTER_SECRET }}" AppCenter-Config.plist
      working-directory: apps/mobile/ios

    - name: Deploy to CodePush
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        if [[ "$BRANCH_NAME" == "main" ]]; then
          yarn ios
        elif [[ "$BRANCH_NAME" == "develop" ]]; then
          yarn ios:codepush
        else
          yarn ios:dev
        fi
      env:
        APP_CENTER_TOKEN: ${{ secrets.APP_CENTER_TOKEN }}
      working-directory: apps/mobile

  deploy-android:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: apps/mobile/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('apps/mobile/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install dependencies
      run: yarn install
      working-directory: apps/mobile

    - name: Update appcenter-config.json with AppSecret
      run: |
        cd apps/mobile/android/app/src/main/assets
        jq --arg appSecret "${{ secrets.APP_CENTER_SECRET }}" '.AppSecret = $appSecret' appcenter-config.json > appcenter-config.tmp
        mv appcenter-config.tmp appcenter-config.json

    - name: Deploy to CodePush
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        if [[ "$BRANCH_NAME" == "main" ]]; then
          yarn android:prdRelease
        elif [[ "$BRANCH_NAME" == "develop" ]]; then
          yarn android:codepushDebug
        else
          yarn android:devRelease
        fi
      env:
        APP_CENTER_TOKEN: ${{ secrets.APP_CENTER_TOKEN }}
      working-directory: apps/mobile
